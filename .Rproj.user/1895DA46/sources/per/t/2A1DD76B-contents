# file to specify graphs G and data for simulation study 
# generate individual variants with rho=0.2 and errors [-0.1,0.1] for common edges

rm(list=ls())

p = 100

# common graph 
G = diag(0,p)

G[1,2:14] <- G[12,15] <- G[13,16] <- G[14,17] <- G[17,18] <- 1
G[1,19] <- G[19,20] <- G[19,21] <- G[21,22:23] <- G[23,24] <- 1
G[1,25] <- G[25,26] <- 1

G[26,27:33] <- G[33,34:35] <- 1
G[26,36] <- G[36,37:39] <- G[38,40] <- G[39,41] <- 1
G[26,42] <- G[42,43:44] <- G[44,45] <- 1
G[26,46] <- G[46,47] <- G[47,48] <- G[48,49:52] <- G[52,53] <- 1
G[26,54] <- 1

G[54,55:62] <- G[59,63] <- G[60,64] <- G[61,65] <- G[62,66] <- 1
G[54,67] <- G[67,68:72] <- 1
G[54,73] <- G[73,74:76] <- G[76,77] <- 1
G[54,78] <- 1

G[78,79:82] <- G[81,83] <- G[82,84:85] <- 1
G[78,86] <- 1
G[86,87:92] <- G[90,93] <- G[91,94] <- G[92,95:96] <- 1
G[86,97] <- G[97,98:99] <- G[99,100] <- 1


# library(igraph)
# g0 = graph.adjacency(G,mode="undirected")
# tkplot(g0, layout=layout.kamada.kawai,vertex.label=rep('',p),vertex.size=5,
#              vertex.color="gray80", canvas.width=650, canvas.height=600 )



temp <- diag(0.5,p) + G*matrix(runif(p*p,0.5,1)*sample(c(-1,1),p*p,replace=TRUE),p,p)
temp2 <- temp + t(temp) + diag(rowSums(G+t(G))/2)
any(eigen(temp2,only.values=T)$values <= 0)
Omega0.true <- diag(diag(temp2)^-0.5) %*% temp2 %*% diag(diag(temp2)^-0.5)

# plot(sort(Omega0.true[Omega0.true != 0 & Omega0.true < 0.99]))


# add/subtract individual specific edges

A = diag(0,p); A[upper.tri(A)] = 1; A = A-G;
ind.0 <- which(A==1)
ind.1 <- which(G==1)

K = 8 
Gk <- Omegas.true <- array(0,c(p,p,K))

dif.p <- 0.2 
es <- 0.1

# Generating mechanism 1
for(k in 1:K) {
    
    ind.ak <- sample(ind.0, round(sum(G)*dif.p))
    ind.dk <- sample(ind.1, round(sum(G)*dif.p))
    ind.sm <- setdiff(ind.1,ind.dk)
    G.ak <- G.dk <- G.sm <- matrix(0,p,p)
    G.ak[ind.ak] <- 1
    G.dk[ind.dk] <- 1
    G.sm[ind.sm] <- 1
    
    temp.k = matrix(0,p,p)
    while(any(eigen(temp.k)$values <= 0)) {
        
        temp.ak <- G.ak*matrix(runif(p*p,0.5,1)*sample(c(-1,1),p*p,replace=TRUE),p,p)
        temp.dk <- G.dk*temp
        temp.sm <- G.sm*matrix(runif(p*p,0,es)*sample(c(-1,1),p*p,replace=TRUE),p,p)
        temp.k <- temp + t(temp) - temp.dk - t(temp.dk) + temp.ak + t(temp.ak) + temp.sm + t(temp.sm) + 
            diag(rowSums(G+t(G)+G.ak+t(G.ak)-G.dk-t(G.dk))/2)
    }
    Omegas.true[,,k] <- diag(diag(temp.k)^-0.5) %*% temp.k %*% diag(diag(temp.k)^-0.5)
    
    Gk[,,k] <- G + G.ak -G.dk
    
    cat(k,"is done \n")
}

G.true <- G
Gk.true <- Gk



n <- 50

sim.dat <- rep(list(NA),K)
for(k in 1:K) sim.dat[[k]] <- matrix(rnorm(n*p),n,p) %*% chol(solve(Omegas.true[,,k]))


save(G.true,Gk.true,Omega0.true,Omegas.true,sim.dat, file='sim_data.rda'))







